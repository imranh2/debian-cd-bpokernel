name: "CI"

on:
  push:
    branches: [ master ]
  schedule:
    - cron:  '20 4 */10 * *' #4:20 every 10 days

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out repository under $GITHUB_WORKSPACE
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image that'll build our iso
        run: docker build -t debcdbpoknl-builder .

      - name: Make the output folder
        run: mkdir tmp

      - name: Run the build container
        run: docker run -v $(pwd)/tmp:/tmp debcdbpoknl-builder

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: latest-cd-bpokernel
      #    release_name: Latest Debian Install CD with bpo kernel
      #    draft: false
      #    prerelease: false

      #- name: Upload Release Asset
      #  id: upload-release-asset 
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #    asset_path: ./tmp/simple-cdd-tmp/images/debian-*.iso
      #    asset_name: ./tmp/simple-cdd-tmp/images/debian-*.iso
      #    asset_content_type: application/vnd.debian.binary-package

      - name: Delete
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Latest-ish Debian Install CD with bpo kernel
          tag_name: latest-cd-bpokernel
          body: Latest Debian Stable Install CD with bpo kernel
          files: |
            ./tmp/simple-cdd-tmp/images/debian-*.iso
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
